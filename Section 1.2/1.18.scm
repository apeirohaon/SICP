#lang sicp
(define (even? x)
   (= (remainder x 2) 0))
(define (double x)
   (* 2 x))
(define (halve x)
   (/ x 2))
(define (mult a b)
   (mult-iter 0 a b))
(define (mult-iter c a b)
   (cond ((= b 0) c)
         ((even? b) (mult-iter c (double a) (/ b 2)))
         (else (mult-iter (+ c a) a (- b 1)))))

(mult 12 12)